private readonly AppDbContext _context

public VendorsController(AppDbContext context)
{
    _context = context;
}

// GET: Vendors
public async Task<IActionResult> Index()
{
    return View();
}

// POST: Vendors/Create
[HttpPost]
[ValidateAntiForgeryToken]
public async Task<IActionResult> Create([Bind("Id,Name,Address,Phone,Email,Website,ContactPerson,ContactPersonPhone,ContactPersonEmail")] Vendor vendor)
{
    if (ModelState.IsValid)
    {
        _context.Add(vendor);
        await _context.SaveChangesAsync();
        return RedirectToAction(nameof(Index));
    }
    return View(vendor);
}

// GET: Vendors/Edit/5
public async Task<IActionResult> Edit(int? id)
{
    if (id == null)
    {
        return NotFound();
    }

    var vendor = await _context.Vendors.FindAsync(id);
    if (vendor == null)
    {
        return NotFound();
    }
    return View(vendor);
}

// POST: Vendors/Edit/5
[HttpPost]
[ValidateAntiForgeryToken]
public async Task<IActionResult> Edit(int id, [Bind("Id,Name,Address,Phone,Email,Website,ContactPerson,ContactPersonPhone,ContactPersonEmail")] Vendor vendor)
{
    if (id != vendor.Id)
    {
        return NotFound();
    }

    if (ModelState.IsValid)
    {
        try
        {
            _context.Update(vendor);
            await _context.SaveChangesAsync();
        }
        catch (DbUpdateConcurrencyException)
        {
            if (!VendorExists(vendor.Id))
            {
                return NotFound();
            }
            else
            {
                throw;
            }
        }
        return RedirectToAction(nameof(Index));
    }
    return View(vendor);
}

// GET: Vendors/Details/5
public async Task<IActionResult> Details(int? id)
{
    if (id == null)
    {
        return NotFound();
    }

    var vendor = await _context.Vendors
        .FirstOrDefaultAsync(m => m.Id == id);
    if (vendor == null)
    {
        return NotFound();
    }

    return View(vendor);
}

private bool VendorExists(int id)
{
    return _context.Vendors.Any(e => e.Id == id);
}
```